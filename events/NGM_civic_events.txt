###############################
#######  国是用イベント ########
###############################
namespace = ngm_civic
# 青年政治
country_event = {
	id = ngm_civic.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_civic = civic_ngm_youth_politics
	}
	immediate = {
		every_owned_leader = {
			limit = {
				NOT = {
					has_leader_flag = flag_ngm_got_civic_young
				}
			}
			add_trait = leader_trait_adaptable
			set_leader_flag = flag_ngm_got_civic_young
		}
		every_owned_species = {
			limit = {
				NOT = {  has_species_flag = flag_ngm_got_civic_young }
			}
			set_species_flag = { 
				flag = flag_ngm_got_civic_young
			}
			modify_species = {
				species = THIS # species to modify
				base = auto # new base species; default: auto (uses species)
				add_trait = trait_ngm_youth_politics # optional, can specify multiple
				# remove_trait = <key> # optional, can specify multiple
				# ideal_planet_class = <target or pc_name> # optional
				change_scoped_species = yes # modify scoped pops/planet/leader/country; default: yes
				# portrait = <target or portrait name> # optional
				# effect = { SCOPE_SPECIES } # optional effect to run on the resulting new species, is executed after any handling of change_scoped_species
			}
		}
	}
}

country_event = {
	id = ngm_civic.2
	hide_window = no
	is_triggered_only = yes
	trigger = {
		has_civic = civic_ngm_youth_politics
	}
	immediate = {
		every_owned_leader = {
			limit = {
				NOT = {
					has_leader_flag = flag_ngm_got_civic_young
				}
			}
			add_trait = leader_trait_adaptable
			set_leader_flag = flag_ngm_got_civic_young
		}
	}
}

# 老年政治
country_event = {
	id = ngm_civic.3
	hide_window = no
	is_triggered_only = no
	trigger = {
		has_civic = civic_ngm_elder_politics
	}
	immediate = {
		every_owned_leader = {
			limit = {
				has_leader_flag = temp_election_leader
				# NOT = {
				# 	leader_class = ruler
				# }
			}
			add_trait = leader_trait_adaptable
			add_experience = 1200
			# kill_leader = {
			# 	show_notification = no
			# }
		}
	}
}

# 	immediate = {
# 		every_owned_species = {
# 			limit = {
# 				NOT = {  has_species_flag = flag_ngm_got_civic_old }
# 			}
# 			set_species_flag = { 
# 				flag = flag_ngm_got_civic_old
# 			}
# 			add_trait = trait_ngm_elder_politics
# 		}
# 	}
# }
# リーダーの特性付
country_event = {
	id = ngm_civic.4
	hide_window = no
	is_triggered_only = no
	trigger = {
		has_civic = civic_ngm_elder_politics
	}
	immediate = {
		every_owned_leader = {
			limit = {
				NOT = {
					has_leader_flag = flag_ngm_got_civic_old_bonus
				}
			}
			set_leader_flag = {
				flag = flag_ngm_got_civic_old_bonus
			}
			add_trait = leader_trait_adaptable
			add_experience = 1200
		}
	}
}

country_event = {
	id = ngm_civic.5
	is_triggered_only = no
	hide_window = no
	immediate = {
	}
}