###############################
#######  起源用イベント ########
###############################
namespace = ngm_origin
# 律儀な古代の緩衝国家	生成イベント
country_event = {
	id = ngm_origin.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_buffer_state
	}
	immediate = {
		add_relic = r_ngm_ancient_pact
		set_global_flag = ngm_buffer_state_global_flag
		set_country_flag = ngm_buffer_state_country_flag
		# Tag our old home planet
		capital_scope = {
			save_event_target_as = previous_home_planet
			solar_system = {
				save_event_target_as = previous_home_system
			}
			if = {
				limit = {
					any_owned_leader = {
						leader_class = governor
						exists = sector
					}
				}
				random_owned_leader = {
					limit = {
						leader_class = governor
						
					}
					unassign_leader = this
					save_event_target_as = ngm_buffer_gov
				}
			}
			else = {
				root = {
					random_owned_leader = {
						limit = {
							leader_class = governor
						}
						save_event_target_as = ngm_buffer_gov
					}
				}
			}
		}
		# Spawn the Birch World System
		no_scope = {
			set_spawn_system_batch = begin
			spawn_system = {
				min_distance >= 200
				max_distance <= 300
				initializer = "ngm_buffer_state_starting_init"
				hyperlane = yes
			}
			last_created_system = {
				set_name = "Buffer Zoon"
			}
			set_spawn_system_batch = end
		}
		event_target:ngm_buffer_state_starting_system = {
			set_star_flag = empire_cluster
			set_star_flag = empire_home_system
			# Add a starbase
			create_starbase = {
				size = "starbase_starport"
				module = "shipyard"
				building = "crew_quarters"
				owner = root
				effect = {
					save_event_target_as = ngm_buffer_starbase
				}
			}
		}
		# Buildings
		event_target:ngm_buffer_state = {
			set_owner = root
			set_controller = root
			set_capital = yes
			set_sector_capital = yes
			sector = {
				assign_leader = event_target:ngm_buffer_gov
			}
			if = {
				limit = {
					owner = {
						is_ai = yes
					}
				}
				while = {
					count = 15
					create_pop = {
						species = owner_main_species
					}
				}
			}
			add_deposit = d_fungal_forest
			add_building = building_bureaucratic_1
			add_building = building_factory_1
			add_modifier = {
				modifier = ngm_determination_to_rebuild
				years = 20
			}
			while = {
				count = 3
				add_district = district_city
				add_district = district_industrial
				add_district = district_generator
				add_district = district_mining
			}
			if = {
				limit = {
					owner = {
						is_regular_empire = yes
					}
				}
				add_building = building_capital
				add_building = building_ngm_perpetual_palace
				add_district = district_farming
				add_district = district_farming
				add_district = district_farming
			}
			else_if = {
				limit = {
					owner = {
						is_hive_empire = yes
					}
				}
				add_building = building_hive_capital
				add_building = building_spawning_pool
			}
			else_if = {
				limit = {
					owner = {
						is_machine_empire = yes
					}
				}
				add_building = building_machine_capital
				add_building = building_machine_assembly_plant
			}
		}
		# Move player ships
		every_owned_fleet = {
			limit = {
				any_owned_ship = {
					OR = {
						is_ship_size = constructor
						is_ship_size = corvette
						is_ship_size = science
					}
				}
			}
			set_location = event_target:ngm_buffer_starbase
			if = {
				limit = {
					any_owned_ship = {
						is_ship_size = corvette
					}
				}
				set_home_base = event_target:ngm_buffer_starbase
			}
		}
		# Remove the old home planet
		event_target:previous_home_planet = {
			every_owned_pop = {
				if = {
					limit = {
						is_robot_pop = no
						is_sapient = yes
					}
					modify_species = {
						ideal_planet_class = pc_relic
					}
				}
				unemploy_pop = yes
				resettle_pop = {
					pop = this
					planet = event_target:ngm_buffer_state
				}
			}
			change_pc = pc_nuked
			destroy_colony = yes
			reroll_planet = yes
		}
		event_target:ngm_buffer_state = {
			every_owned_pop = {
				unemploy_pop = yes
				clear_pop_category = yes
			}
			check_planet_employment = yes
		}
		# unclaim the old home system
		event_target:previous_home_system = {
			every_fleet_in_system = {
				delete_fleet = this
			}
			remove_star_flag = empire_home_system
			remove_star_flag = empire_cluster
			every_neighbor_system = {
				remove_star_flag = empire_cluster
				every_neighbor_system = {
					remove_star_flag = empire_cluster
				}
			}
		}
		# Set species homeworld
		owner_species = {
			set_species_homeworld = event_target:ngm_buffer_state
		}
		every_owned_pop_species = {
			set_species_homeworld = event_target:ngm_buffer_state
		}
		country_event = {
			id = ngm_origin.2
		}
	}
}

# 律儀な古代の緩衝国家	ハイパーレーン形成イベント
country_event = {
	id = ngm_origin.2
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_system = {
			limit = {
				distance = {
					type = euclidean
					source = prev
					min_distance >= 50
					max_distance <= 100
				}
			}
			random_list = {
				25 = {
					add_hyperlane = {
						from = this
						to = event_target:ngm_buffer_state_starting_system
					}
				}
				75 = {
				}
			}
		}
		every_system = {
			limit = {
				distance = {
					type = euclidean
					source = prev
					min_distance >= 0
					max_distance <= 20
				}
			}
			add_hyperlane = {
				from = this
				to = event_target:ngm_buffer_state_starting_system
			}
		}
		event_target:ngm_buffer_state_starting_system = {
			while = {
				count = 12
				random_system_planet = {
					limit = {
						OR = {
							is_asteroid = yes
							is_planet_class = pc_barren
							is_planet_class = pc_barren_cold
							is_planet_class = pc_toxic
							is_planet_class = pc_frozen
						}
					}
					random_list = {
						20 = {
							set_deposit = d_energy_2
						}
						20 = {
							set_deposit = d_minerals_2
						}
						20 = {
							set_deposit = d_rare_crystals_2
						}
						20 = {
							set_deposit = d_exotic_gases_2
						}
						20 = {
							set_deposit = d_volatile_motes_2
						}
						20 = {
							set_deposit = d_dark_matter_deposit_3
						}
						20 = {
							set_deposit = d_zro_deposit_3
						}
						20 = {
							set_deposit = d_living_metal_deposit
							set_deposit = d_living_metal_deposit
						}
					}
				}
			}
		}
	}
}

# 過去への逃走 始まり
country_event = {
	id = ngm_origin.3
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金とバフ
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 2500
				}
				add_modifier = {
					modifier = ngm_space_time_continuum_ai
				}
			}
		}
		every_owned_planet = {
			add_modifier = {
				modifier = ngm_space_time_continuum
			}
		}
		country_event = {
			id = ngm_origin.4
			days = 3600
		}
	}
}

# 過去への逃走 10年
country_event = {
	id = ngm_origin.4
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 2500
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 16
									create_ship = {
										design = "NAME_PURSUER_SMALL_A"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.5
			days = 3600			#10年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 20年
country_event = {
	id = ngm_origin.5
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 2500
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 28
									create_ship = {
										design = "NAME_PURSUER_SMALL_A"
										name = "Pursuer"
									}
								}
								while = {
									count = 4
									create_ship = {
										design = "NAME_PURSUER_SMALL_A"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.6
			days = 3600			#10年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 30年
country_event = {
	id = ngm_origin.6
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 3000
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 40
									create_ship = {
										design = "NAME_PURSUER_SMALL_A"
										name = "Pursuer"
									}
								}
								while = {
									count = 8
									create_ship = {
										design = "NAME_PURSUER_MEDIUM_A"
										name = "Pursuer"
									}
								}
								while = {
									count = 1
									create_ship = {
										design = "NAME_PURSUER_LARGE_A"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.7
			days = 3600			#10年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 40年
country_event = {
	id = ngm_origin.7
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 3500
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 60
									create_ship = {
										design = "NAME_PURSUER_SMALL_B"
										name = "Pursuer"
									}
								}
								while = {
									count = 12
									create_ship = {
										design = "NAME_PURSUER_MEDIUM_B"
										name = "Pursuer"
									}
								}
								while = {
									count = 3
									create_ship = {
										design = "NAME_PURSUER_LARGE_A"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.8
			days = 3600			#10年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 50年
country_event = {
	id = ngm_origin.8
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 4000
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 100
									create_ship = {
										design = "NAME_PURSUER_SMALL_C"
										name = "Pursuer"
									}
								}
								while = {
									count = 20
									create_ship = {
										design = "NAME_PURSUER_MEDIUM_C"
										name = "Pursuer"
									}
								}
								while = {
									count = 5
									create_ship = {
										design = "NAME_PURSUER_LARGE_C"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.9
			days = 3600			#10年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 60年
country_event = {
	id = ngm_origin.9
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 5000
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 140
									create_ship = {
										design = "NAME_PURSUER_SMALL_D"
										name = "Pursuer"
									}
								}
								while = {
									count = 28
									create_ship = {
										design = "NAME_PURSUER_MEDIUM_C"
										name = "Pursuer"
									}
								}
								while = {
									count = 7
									create_ship = {
										design = "NAME_PURSUER_LARGE_C"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.10
			days = 3600			#10年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 70年
country_event = {
	id = ngm_origin.10
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 5000
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 200
									create_ship = {
										design = "NAME_PURSUER_SMALL_D"
										name = "Pursuer"
									}
								}
								while = {
									count = 60
									create_ship = {
										design = "NAME_PURSUER_MEDIUM_D"
										name = "Pursuer"
									}
								}
								while = {
									count = 12
									create_ship = {
										design = "NAME_PURSUER_LARGE_D"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.11
			days = 3600			#10年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 80年
country_event = {
	id = ngm_origin.11
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 5000
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 320
									create_ship = {
										design = "NAME_PURSUER_SMALL_E"
										name = "Pursuer"
									}
								}
								while = {
									count = 100
									create_ship = {
										design = "NAME_PURSUER_MEDIUM_D"
										name = "Pursuer"
									}
								}
								while = {
									count = 20
									create_ship = {
										design = "NAME_PURSUER_LARGE_D"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.12
			days = 3600			#10年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 90年
country_event = {
	id = ngm_origin.12
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 5000
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 500
									create_ship = {
										design = "NAME_PURSUER_SMALL_E"
										name = "Pursuer"
									}
								}
								while = {
									count = 200
									create_ship = {
										design = "NAME_PURSUER_MEDIUM_D"
										name = "Pursuer"
									}
								}
								while = {
									count = 50
									create_ship = {
										design = "NAME_PURSUER_LARGE_D"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.13
			days = 3600			#10年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 100年
country_event = {
	id = ngm_origin.13
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 5000
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 1000
									create_ship = {
										design = "NAME_PURSUER_SMALL_E"
										name = "Pursuer"
									}
								}
								while = {
									count = 400
									create_ship = {
										design = "NAME_PURSUER_MEDIUM_E"
										name = "Pursuer"
									}
								}
								while = {
									count = 100
									create_ship = {
										design = "NAME_PURSUER_LARGE_E"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.14
			days = 18000			#50年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 150年
country_event = {
	id = ngm_origin.14
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 5000
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 50000
									create_ship = {
										design = "NAME_PURSUER_SMALL_F"
										name = "Pursuer"
									}
								}
								while = {
									count = 10000
									create_ship = {
										design = "NAME_PURSUER_MEDIUM_F"
										name = "Pursuer"
									}
								}
								while = {
									count = 2500
									create_ship = {
										design = "NAME_PURSUER_LARGE_E"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 来襲通知用
country_event = {
	id = ngm_origin.100
	title = ngm_origin.100.name
	desc = ngm_origin.100.desc
	picture = GFX_evt_ship_in_orbit
	show_sound = event_activating_unknown_technology
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	option = {
		name = OK
	}
}

# 追跡者の艦隊が破壊されたとき
country_event = {
	id = ngm_origin.101
	title = ngm_origin.101.name
	desc = ngm_origin.101.desc
	picture = GFX_evt_crisis_defeated
	show_sound = event_celebration
	location = root
	is_triggered_only = yes
	trigger = {
		exists = event_target:pursuer_enemy
		from = {
			is_same_value = event_target:pursuer_enemy
		}
	}
	immediate = {
		event_target:pursuer_enemy = {
			destroy_country = yes
		}
		hidden_effect = {
			add_resource = {
				alloys = 600000
			}
		}
	}
	option = {
		name = ngm_origin.101.a
		locked_random_list = {
			15 = {
				add_monthly_resource_mult = {
					resource = engineering_research
					value = @tier5researchreward
					min = @tier5researchmin
					max = @tier5researchmax
				}
			}
			15 = {
				add_monthly_resource_mult = {
					resource = physics_research
					value = @tier5researchreward
					min = @tier5researchmin
					max = @tier5researchmax
				}
			}
			15 = {
				add_monthly_resource_mult = {
					resource = society_research
					value = @tier5researchreward
					min = @tier5researchmin
					max = @tier5researchmax
				}
			}
			10 = {
				add_random_research_option = {
					add_progress = 0.3
					area = engineering
					ignore_prereqs = yes
					fail_effects = {
						add_monthly_resource_mult = {
							resource = engineering_research
							value = @tier5researchreward
							min = @tier5researchmin
							max = @tier5researchmax
						}
					}
				}
			}
			10 = {
				add_random_research_option = {
					add_progress = 0.3
					area = physics
					ignore_prereqs = yes
					fail_effects = {
						add_monthly_resource_mult = {
							resource = physics_research
							value = @tier5researchreward
							min = @tier5researchmin
							max = @tier5researchmax
						}
					}
				}
			}
			10 = {
				add_random_research_option = {
					add_progress = 0.3
					area = society
					ignore_prereqs = yes
					fail_effects = {
						add_monthly_resource_mult = {
							resource = society_research
							value = @tier5researchreward
							min = @tier5researchmin
							max = @tier5researchmax
						}
					}
				}
			}
			5 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = nano_forge_build_count
							value = 1
						}
					}
				}
			}
			5 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = skydome_build_count
							value = 1
						}
					}
				}
			}
			5 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = dimensional_fabricator_build_count
							value = 1
						}
					}
				}
			}
			5 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = affluence_center_build_count
							value = 1
						}
					}
				}
			}
			3 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = nourishment_center_build_count
							value = 1
						}
					}
				}
			}
			2 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = class_4_singularity_build_count
							value = 1
						}
					}
				}
			}
		}
	}
	option = {
		name = ngm_origin.101.b
		locked_random_list = {
			15 = {
				add_monthly_resource_mult = {
					resource = engineering_research
					value = @tier5researchreward
					min = @tier5researchmin
					max = @tier5researchmax
				}
			}
			15 = {
				add_monthly_resource_mult = {
					resource = physics_research
					value = @tier5researchreward
					min = @tier5researchmin
					max = @tier5researchmax
				}
			}
			15 = {
				add_monthly_resource_mult = {
					resource = society_research
					value = @tier5researchreward
					min = @tier5researchmin
					max = @tier5researchmax
				}
			}
			10 = {
				add_random_research_option = {
					add_progress = 0.3
					area = engineering
					ignore_prereqs = yes
					fail_effects = {
						add_monthly_resource_mult = {
							resource = engineering_research
							value = @tier5researchreward
							min = @tier5researchmin
							max = @tier5researchmax
						}
					}
				}
			}
			10 = {
				add_random_research_option = {
					add_progress = 0.3
					area = physics
					ignore_prereqs = yes
					fail_effects = {
						add_monthly_resource_mult = {
							resource = physics_research
							value = @tier5researchreward
							min = @tier5researchmin
							max = @tier5researchmax
						}
					}
				}
			}
			10 = {
				add_random_research_option = {
					add_progress = 0.3
					area = society
					ignore_prereqs = yes
					fail_effects = {
						add_monthly_resource_mult = {
							resource = society_research
							value = @tier5researchreward
							min = @tier5researchmin
							max = @tier5researchmax
						}
					}
				}
			}
			5 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = nano_forge_build_count
							value = 1
						}
					}
				}
			}
			5 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = skydome_build_count
							value = 1
						}
					}
				}
			}
			5 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = dimensional_fabricator_build_count
							value = 1
						}
					}
				}
			}
			5 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = affluence_center_build_count
							value = 1
						}
					}
				}
			}
			3 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = nourishment_center_build_count
							value = 1
						}
					}
				}
			}
			2 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = class_4_singularity_build_count
							value = 1
						}
					}
				}
			}
		}
	}
}

# テスト用 
country_event = {
	id = ngm_origin.102
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								# create_ship = {
								# 	name = "Pursuer"
								# 	design = "NAME_PURSUER_LARGE_A"
								# 	graphical_culture = "pursuer_large"
								# }
								# create_ship = {
								# 	name = "Pursuer"
								# 	design = "NAME_PURSUER_MEDIUM_A"
								# 	graphical_culture = "pursuer_midle"
								# }
								create_ship = {
									name = "Pursuer"
									design = "NAME_PURSUER_SMALL_A"
									graphical_culture = "pursuer_small"
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
	}
}

country_event = {
	id = ngm_origin.103
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								# create_ship = {
								# 	name = "Pursuer"
								# 	design = "NAME_PURSUER_LARGE_A"
								# 	graphical_culture = "pursuer_large"
								# }
								create_ship = {
									name = "Pursuer"
									design = "NAME_PURSUER_MEDIUM_A"
									graphical_culture = "pursuer_midle"
								}
								# create_ship = {
								# 	name = "Pursuer"
								# 	design = "NAME_PURSUER_SMALL_A"
								# 	graphical_culture = "pursuer_small"
								# }
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
	}
}

country_event = {
	id = ngm_origin.104
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								create_ship = {
									name = "Pursuer"
									design = "NAME_PURSUER_LARGE_A"
									graphical_culture = "pursuer_large"
								}
								# create_ship = {
								# 	name = "Pursuer"
								# 	design = "NAME_PURSUER_MEDIUM_A"
								# 	graphical_culture = "pursuer_midle"
								# }
								# create_ship = {
								# 	name = "Pursuer"
								# 	design = "NAME_PURSUER_SMALL_A"
								# 	graphical_culture = "pursuer_small"
								# }
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
	}
}

# 銀河帝国アクアリウム	生成イベント
# country_event = {
# 	id = ngm_origin.1000
# 	hide_window = yes
# 	is_triggered_only = yes
# 	trigger = {
# 		# has_origin = origin_ngm_galactic_empire_aquarium
# 	}
# 	immediate = {
# 		add_relic = r_ngm_geid
# 		set_global_flag = ngm_galactic_empire_aquarium_global_flag
# 		set_country_flag = ngm_galactic_empire_aquarium_country_flag
# 		# Tag our old home planet
# 		capital_scope = {
# 			save_event_target_as = previous_home_planet
# 			solar_system = {
# 				save_event_target_as = previous_home_system
# 			}
# 			if = {
# 				limit = {
# 					exists = sector
# 				}
# 				sector = {
# 					leader = {
# 						unassign_leader = this
# 						save_event_target_as = ngm_galactic_empire_aquarium_gov
# 					}
# 				}
# 			}
# 			else = {
# 				root = {
# 					random_owned_leader = {
# 						limit = {
# 							leader_class = governor
# 						}
# 						save_event_target_as = ngm_galactic_empire_aquarium_gov
# 					}
# 				}
# 			}
# 		}
# 		set_spawn_system_batch = begin
# 		no_scope = {
# 			spawn_system = {
# 				min_distance >= 450
# 				max_distance <= 450
# 				min_orientation_angle = 135
# 				max_orientation_angle = 135
# 				initializer = "ngm_galactic_empire_aquarium_starting_init"
# 				hyperlane = no
# 				effect = {
# 					save_global_event_target_as = ngm_galactic_empire_aquarium1
# 				}
# 			}
# 			last_created_system = {
# 				set_name = "Aquarium"
# 			}
# 			event_target:ngm_galactic_empire_aquarium1 = {
# 				spawn_system = {
# 					min_distance >= 5
# 					max_distance <= 5
# 					min_orientation_angle = 0
# 					max_orientation_angle = 0
# 					initializer = "ngm_galactic_empire_aquarium_starting_pulsar"
# 					hyperlane = no
# 					effect = {
# 						save_global_event_target_as = ngm_galactic_empire_aquarium2
# 					}
# 				}
# 				last_created_system = {
# 					set_name = "Park Clock"
# 				}
# 				spawn_system = {
# 					min_distance >= 5
# 					max_distance <= 5
# 					min_orientation_angle = 180
# 					max_orientation_angle = 180
# 					initializer = "ngm_galactic_empire_aquarium_starting_black_hole"
# 					hyperlane = no
# 					effect = {
# 						save_global_event_target_as = ngm_galactic_empire_aquarium3
# 					}
# 				}
# 				last_created_system = {
# 					set_name = "Park Out"
# 				}
# 				spawn_system = {
# 					min_distance >= 5
# 					max_distance <= 5
# 					min_orientation_angle = 90
# 					max_orientation_angle = 90
# 					initializer = "ngm_galactic_empire_aquarium_starting_upper_gate"
# 					hyperlane = no
# 					effect = {
# 						save_global_event_target_as = ngm_galactic_empire_aquarium4
# 					}
# 				}
# 				last_created_system = {
# 					set_name = "Upper Gate"
# 				}
# 				spawn_system = {
# 					min_distance >= 5
# 					max_distance <= 5
# 					min_orientation_angle = -90
# 					max_orientation_angle = -90
# 					initializer = "ngm_galactic_empire_aquarium_starting_under_gate"
# 					hyperlane = no
# 					effect = {
# 						save_global_event_target_as = ngm_galactic_empire_aquarium5
# 					}
# 				}
# 				last_created_system = {
# 					set_name = "Under Gate"
# 				}
# 			}
# 		}
# 		# add hyperlanes
# 		event_target:ngm_galactic_empire_aquarium1 = {
# 			add_hyperlane = {
# 				from = event_target:ngm_galactic_empire_aquarium1
# 				to = event_target:ngm_galactic_empire_aquarium2
# 			}
# 			add_hyperlane = {
# 				from = event_target:ngm_galactic_empire_aquarium1
# 				to = event_target:ngm_galactic_empire_aquarium3
# 			}
# 		}
# 		event_target:ngm_galactic_empire_aquarium4 = {
# 			add_hyperlane = {
# 				from = event_target:ngm_galactic_empire_aquarium4
# 				to = event_target:ngm_galactic_empire_aquarium2
# 			}
# 			add_hyperlane = {
# 				from = event_target:ngm_galactic_empire_aquarium4
# 				to = event_target:ngm_galactic_empire_aquarium3
# 			}
# 		}
# 		event_target:ngm_galactic_empire_aquarium5 = {
# 			add_hyperlane = {
# 				from = event_target:ngm_galactic_empire_aquarium5
# 				to = event_target:ngm_galactic_empire_aquarium2
# 			}
# 			add_hyperlane = {
# 				from = event_target:ngm_galactic_empire_aquarium5
# 				to = event_target:ngm_galactic_empire_aquarium3
# 			}
# 		}
# 		set_spawn_system_batch = end
# 		# Add a wormhole
# 		random_system = {
# 			limit = {
# 				NOR = {
# 					has_natural_wormhole = yes
# 					starting_system = yes
# 					has_star_flag = empire_cluster
# 				}
# 				distance = {
# 					source = prev
# 					min_distance >= 500
# 				}
# 			}
# 			event_target:ngm_galactic_empire_aquarium4 = {
# 				# done this way to ensure we don't spawn "orphan" wormholes (wormholes that aren't linked to anything)
# 				spawn_natural_wormhole = {
# 					bypass_type = wormhole
# 					random_pos = yes
# 					orbit_angle = 360
# 				}
# 			}
# 			spawn_natural_wormhole = {
# 				bypass_type = wormhole
# 				random_pos = yes
# 				orbit_angle = 360
# 			}
# 			link_wormholes = event_target:ngm_galactic_empire_aquarium4
# 		}
# 		random_system = {
# 			limit = {
# 				NOR = {
# 					has_natural_wormhole = yes
# 					starting_system = yes
# 					has_star_flag = empire_cluster
# 				}
# 				distance = {
# 					source = prev
# 					min_distance >= 500
# 				}
# 			}
# 			event_target:ngm_galactic_empire_aquarium5 = {
# 				# done this way to ensure we don't spawn "orphan" wormholes (wormholes that aren't linked to anything)
# 				spawn_natural_wormhole = {
# 					bypass_type = wormhole
# 					random_pos = yes
# 					orbit_angle = 360
# 				}
# 			}
# 			spawn_natural_wormhole = {
# 				bypass_type = wormhole
# 				random_pos = yes
# 				orbit_angle = 360
# 			}
# 			link_wormholes = event_target:ngm_galactic_empire_aquarium5
# 		}
# 		# Add a starbase
# 		event_target:ngm_galactic_empire_aquarium_starting_system = {
# 			create_starbase = {
# 				size = "starbase_starport"
# 				module = "shipyard"
# 				building = "crew_quarters"
# 				owner = root
# 				effect = {
# 					save_event_target_as = ngm_galactic_empire_aquarium_starbase
# 				}
# 			}
# 		}
# 		event_target:ngm_galactic_empire_aquarium_pulsar_system = {
# 			create_starbase = {
# 				size = starbase_outpost
# 				owner = root
# 			}
# 		}
# 		event_target:ngm_galactic_empire_aquarium_black_hole_system = {
# 			create_starbase = {
# 				size = starbase_outpost
# 				owner = root
# 			}
# 		}
# 		event_target:ngm_galactic_empire_aquarium_upper_gate_system = {
# 			create_starbase = {
# 				size = starbase_outpost
# 				owner = root
# 			}
# 		}
# 		event_target:ngm_galactic_empire_aquarium_under_gate_system = {
# 			create_starbase = {
# 				size = starbase_outpost
# 				owner = root
# 			}
# 		}
# 		# Move player ships
# 		every_owned_fleet = {
# 			limit = {
# 				any_owned_ship = {
# 					OR = {
# 						is_ship_size = constructor
# 						is_ship_size = corvette
# 						is_ship_size = science
# 					}
# 				}
# 			}
# 			set_location = event_target:ngm_galactic_empire_aquarium
# 			if = {
# 				limit = {
# 					any_owned_ship = {
# 						is_ship_size = corvette
# 					}
# 				}
# 				set_home_base = event_target:ngm_galactic_empire_aquarium
# 			}
# 		}
# 		# Remove the old home planet
# 		event_target:previous_home_planet = {
# 			every_owned_pop = {
# 				if = {
# 					limit = {
# 						is_robot_pop = no
# 						is_sapient = yes
# 					}
# 					modify_species = {
# 						ideal_planet_class = pc_ocean
# 					}
# 				}
# 				unemploy_pop = yes
# 				resettle_pop = {
# 					pop = this
# 					planet = event_target:ngm_galactic_empire_aquarium
# 				}
# 			}
# 			change_pc = pc_nuked
# 			destroy_colony = yes
# 			reroll_planet = yes
# 		}
# 		event_target:ngm_galactic_empire_aquarium = {
# 			every_owned_pop = {
# 				unemploy_pop = yes
# 				clear_pop_category = yes
# 			}
# 			check_planet_employment = yes
# 		}
# 		# unclaim the old home system
# 		event_target:previous_home_system = {
# 			every_fleet_in_system = {
# 				delete_fleet = this
# 			}
# 			remove_star_flag = empire_home_system
# 			remove_star_flag = empire_cluster
# 			every_neighbor_system = {
# 				remove_star_flag = empire_cluster
# 				every_neighbor_system = {
# 					remove_star_flag = empire_cluster
# 				}
# 			}
# 		}
# 		# Set species homeworld
# 		owner_species = {
# 			set_species_homeworld = event_target:ngm_galactic_empire_aquarium
# 		}
# 		every_owned_pop_species = {
# 			set_species_homeworld = event_target:ngm_galactic_empire_aquarium
# 		}
# 		add_research_option = tech_wormhole_stabilization
# 		owner = {
# 			set_country_flag = encountered_first_wormhole
# 			add_seen_bypass_type = wormhole
# 		}
# 		country_event = {
# 			id = ngm_origin.1001
# 		}
# 		country_event = {
# 			id = game_start.9
# 		}
# 		country_event = {
# 			id = distar.3043
# 		}
# 	}
# }
# # 銀河帝国アクアリウム	建築物生成イベント
# country_event = {
# 	id = ngm_origin.1001
# 	hide_window = yes
# 	is_triggered_only = yes
# 	trigger = {
# 		# has_origin = origin_ngm_galactic_empire_aquarium
# 	}
# 	immediate = {
# 		# Buildings
# 		event_target:ngm_galactic_empire_aquarium = {
# 			set_owner = root
# 			set_controller = root
# 			set_capital = yes
# 			set_sector_capital = yes
# 			sector = {
# 				assign_leader = event_target:ngm_galactic_empire_aquarium_gov
# 			}
# 			if = {
# 				limit = {
# 					owner = {
# 						is_ai = yes
# 					}
# 				}
# 				while = {
# 					count = 15
# 					create_pop = {
# 						species = owner_main_species
# 					}
# 				}
# 			}
# 			add_deposit = d_fungal_forest
# 			add_building = building_capital
# 			add_building = building_ngm_garden_palace
# 			add_building = building_ngm_aquarium_central_gate
# 			add_building = building_ngm_great_ocean_temple
# 			add_building = building_bureaucratic_1
# 			add_building = building_factory_1
# 			add_building = building_research_lab_1
# 			add_district = ngm_district_arcology_marine_fisheries_research
# 			add_district = ngm_district_arcology_marine_housing
# 			add_district = ngm_district_arcology_marine_administrative_Organization
# 			add_district = ngm_district_arcology_marine_health_care
# 			add_district = ngm_district_arcology_marine_water_park
# 		}
# 	}
# }

# 黄昏の帝国	生成イベント
country_event = {
	id = ngm_origin.2000
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_phenix
	}
	immediate = {
		unlock_council_slots = 3
		add_relic = r_ngm_imperial_chronicle
		set_global_flag = ngm_phenix_global_flag
		set_country_flag = ngm_phenix_country_flag
		save_global_event_target_as = ngm_phenix_country
		# Tag our old home planet
		capital_scope = {
			save_event_target_as = previous_home_planet
			solar_system = {
				save_event_target_as = previous_home_system
			}
			if = {
				limit = {
					exists = sector
				}
				# sector = {
				# 	leader = {
				# 		unassign_leader = this
				# 		save_event_target_as = ngm_phenix_gov
				# 	}
				# }
			}
			else = {
				root = {
					random_owned_leader = {
						limit = {
							leader_class = governor
						}
						save_event_target_as = ngm_phenix_gov
					}
				}
			}
		}
		set_spawn_system_batch = begin
		no_scope = {
			spawn_system = {
				min_distance >= 500
				max_distance <= 550
				min_orientation_angle = 0
				max_orientation_angle = 360
				initializer = "ngm_phenix_01_init"
				hyperlane = no
				effect = {
					save_global_event_target_as = ngm_phenix_1
				}
			}
			last_created_system = {
				set_name = "Felix"
			}
			event_target:ngm_phenix_1 = {
				spawn_system = {
					min_distance >= 5
					max_distance <= 5
					min_orientation_angle = 135
					max_orientation_angle = 135
					initializer = "ngm_phenix_02_init"
					hyperlane = no
					effect = {
						save_global_event_target_as = ngm_phenix_2
					}
				}
				last_created_system = {
					set_name = "Fatum"
				}
				spawn_system = {
					min_distance >= 5
					max_distance <= 5
					min_orientation_angle = 225
					max_orientation_angle = 225
					initializer = "ngm_phenix_03_init"
					hyperlane = no
					effect = {
						save_global_event_target_as = ngm_phenix_3
					}
				}
				last_created_system = {
					set_name = "Mediocritas"
				}
				spawn_system = {
					min_distance >= 5
					max_distance <= 5
					min_orientation_angle = 315
					max_orientation_angle = 315
					initializer = "ngm_phenix_04_init"
					hyperlane = no
					effect = {
						save_global_event_target_as = ngm_phenix_4
					}
				}
				last_created_system = {
					set_name = "Gladius"
				}
				spawn_system = {
					min_distance >= 5
					max_distance <= 5
					min_orientation_angle = 45
					max_orientation_angle = 45
					initializer = "ngm_phenix_05_init"
					hyperlane = no
					effect = {
						save_global_event_target_as = ngm_phenix_5
					}
				}
				last_created_system = {
					set_name = "lux et umbra"
				}
				spawn_system = {
					min_distance >= 5
					max_distance <= 5
					min_orientation_angle = 180
					max_orientation_angle = 180
					initializer = "ngm_phenix_06_init"
					hyperlane = no
					effect = {
						save_global_event_target_as = ngm_phenix_6
					}
				}
				last_created_system = {
					set_name = "Aeternitas"
				}
				spawn_system = {
					min_distance >= 5
					max_distance <= 5
					min_orientation_angle = 0
					max_orientation_angle = 0
					initializer = "ngm_phenix_07_init"
					hyperlane = no
					effect = {
						save_global_event_target_as = ngm_phenix_7
					}
				}
				last_created_system = {
					set_name = "Abyssus"
				}
				spawn_system = {
					min_distance >= 5
					max_distance <= 5
					min_orientation_angle = 90
					max_orientation_angle = 90
					initializer = "ngm_phenix_08_init"
					hyperlane = no
					effect = {
						save_global_event_target_as = ngm_phenix_8
					}
				}
				last_created_system = {
					set_name = "Tempus"
				}
				spawn_system = {
					min_distance >= 5
					max_distance <= 5
					min_orientation_angle = 270
					max_orientation_angle = 270
					initializer = "ngm_phenix_09_init"
					hyperlane = no
					effect = {
						save_global_event_target_as = ngm_phenix_9
					}
				}
				last_created_system = {
					set_name = "Locus"
				}
				spawn_system = {
					min_distance >= 10
					max_distance <= 10
					min_orientation_angle = 0
					max_orientation_angle = 0
					initializer = "ngm_phenix_10_init"
					hyperlane = no
					effect = {
						save_global_event_target_as = ngm_phenix_10
					}
				}
				last_created_system = {
					set_name = "Caelum"
				}
			}
		}
		# add hyperlanes
		event_target:ngm_phenix = {
			add_hyperlane = {
				from = event_target:ngm_phenix_01_init_system
				to = event_target:ngm_phenix_02_init_system
			}
			add_hyperlane = {
				from = event_target:ngm_phenix_01_init_system
				to = event_target:ngm_phenix_03_init_system
			}
			add_hyperlane = {
				from = event_target:ngm_phenix_01_init_system
				to = event_target:ngm_phenix_04_init_system
			}
			add_hyperlane = {
				from = event_target:ngm_phenix_01_init_system
				to = event_target:ngm_phenix_05_init_system
			}
			add_hyperlane = {
				from = event_target:ngm_phenix_06_init_system
				to = event_target:ngm_phenix_02_init_system
			}
			add_hyperlane = {
				from = event_target:ngm_phenix_06_init_system
				to = event_target:ngm_phenix_03_init_system
			}
			add_hyperlane = {
				from = event_target:ngm_phenix_07_init_system
				to = event_target:ngm_phenix_04_init_system
			}
			add_hyperlane = {
				from = event_target:ngm_phenix_07_init_system
				to = event_target:ngm_phenix_05_init_system
			}
			add_hyperlane = {
				from = event_target:ngm_phenix_08_init_system
				to = event_target:ngm_phenix_02_init_system
			}
			add_hyperlane = {
				from = event_target:ngm_phenix_08_init_system
				to = event_target:ngm_phenix_05_init_system
			}
			add_hyperlane = {
				from = event_target:ngm_phenix_09_init_system
				to = event_target:ngm_phenix_03_init_system
			}
			add_hyperlane = {
				from = event_target:ngm_phenix_09_init_system
				to = event_target:ngm_phenix_04_init_system
			}
			add_hyperlane = {
				from = event_target:ngm_phenix_10_init_system
				to = event_target:ngm_phenix_07_init_system
			}
		}
		set_spawn_system_batch = end
		# Add a starbase
		event_target:ngm_phenix_01_init_system = {
			set_star_flag = empire_cluster
			set_star_flag = empire_home_system
			create_starbase = {
				size = "starbase_citadel"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "trading_hub"
				building = "crew_quarters"
				building = "target_uplink_computer"
				building = "defense_grid"
				owner = root
				effect = {
					save_event_target_as = ngm_phenix_starbase
				}
			}
		}
		event_target:ngm_phenix_02_init_system = {
			create_starbase = {
				size = "starbase_citadel"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				building = "crew_quarters"
				building = "target_uplink_computer"
				building = "defense_grid"
				owner = root
			}
		}
		event_target:ngm_phenix_03_init_system = {
			create_starbase = {
				size = "starbase_citadel"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				building = "crew_quarters"
				building = "target_uplink_computer"
				building = "defense_grid"
				owner = root
			}
		}
		event_target:ngm_phenix_04_init_system = {
			create_starbase = {
				size = "starbase_citadel"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				building = "crew_quarters"
				building = "target_uplink_computer"
				building = "defense_grid"
				owner = root
			}
		}
		event_target:ngm_phenix_05_init_system = {
			create_starbase = {
				size = "starbase_citadel"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				building = "crew_quarters"
				building = "target_uplink_computer"
				building = "defense_grid"
				owner = root
			}
		}
		event_target:ngm_phenix_06_init_system = {
			create_starbase = {
				size = "starbase_citadel"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				building = "crew_quarters"
				building = "target_uplink_computer"
				building = "defense_grid"
				owner = root
			}
		}
		event_target:ngm_phenix_07_init_system = {
			create_starbase = {
				size = "starbase_citadel"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				building = "crew_quarters"
				building = "target_uplink_computer"
				building = "defense_grid"
				owner = root
			}
		}
		event_target:ngm_phenix_08_init_system = {
			create_starbase = {
				size = "starbase_citadel"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				building = "crew_quarters"
				building = "target_uplink_computer"
				building = "defense_grid"
				owner = root
			}
		}
		event_target:ngm_phenix_09_init_system = {
			create_starbase = {
				size = "starbase_citadel"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				building = "crew_quarters"
				building = "target_uplink_computer"
				building = "defense_grid"
				owner = root
			}
		}
		event_target:ngm_phenix_10_init_system = {
			create_starbase = {
				size = "starbase_citadel"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				module = "shipyard"
				building = "crew_quarters"
				building = "target_uplink_computer"
				building = "defense_grid"
				owner = root
			}
		}
		# 種族作成
		create_species = {
			name = "NAME_NGM_origin_ngm_phenix_machine"
			plural = "NAME_NGM_origin_ngm_phenix_machine_plural"
			class = ROBOT
			namelist = MACHINE1
			portrait = tox_machine
			traits = {
				trait = "trait_mechanical"
				# 霊子コンピュータ
				trait = "trait_ngm_m_reishi"
				# 効率的なプロセッサ
				trait = "trait_robot_efficient_processors"
				# 洗練されたプロトコル
				trait = "trait_robot_streamlined_protocols"
				# 感情模倣装置
				trait = "trait_robot_emotion_emulators"
				# 短絡的判断
				trait = "trait_ngm_m_nasty"
				# 高級品
				trait = "trait_robot_luxurious"
				# 不適切配線
				trait = "trait_ngm_m_wiring"
			}
			homeworld = event_target:ngm_phenix
			effect = {
				save_global_event_target_as = ngm_phenix_global_machine_species
			}
		}
		create_species = {
			name = "NAME_NGM_origin_ngm_phenix_avi"
			plural = "NAME_NGM_origin_ngm_phenix_avi_plural"
			class = AVI
			namelist = AVI2
			portrait = avi2
			extra_trait_points = 10
			homeworld = event_target:ngm_phenix
			traits = {
				trait = "trait_pc_city_preference"
				# 異常発達
				trait = "trait_ngm_abn_growth"
				# 極度の順応性
				trait = "trait_extremely_adaptive"
				# 飛行器官
				trait = "trait_ngm_flying"
				# 倹約家
				trait = "trait_thrifty"
				# 従順
				trait = "trait_docile"
				# 遵奉者
				trait = "trait_conformists"
				# 小型
				trait = "trait_ngm_small"
				# 縄張り意識
				trait = "trait_ngm_turf"
				# 愚鈍
				trait = "trait_ngm_stupidity"
				# 混乱
				trait = "trait_ngm_confusion"
				# 無文字社会
				trait = "trait_ngm_elder_non_character"
			}
			effect = {
				save_global_event_target_as = ngm_phenix_global_avi_species
			}
		}
		last_created_species = {
			set_citizenship_type = {
				country = root.owner
				type = citizenship_slavery
			}
			set_slavery_type = {
				type = slavery_indentured
				country = root.owner
			}
		}
		set_policy = {
			policy = artificial_intelligence_policy
			option = ai_servitude
			cooldown = yes
		}
		# Move player ships
		every_owned_fleet = {
			limit = {
				any_owned_ship = {
					OR = {
						is_ship_size = constructor
						is_ship_size = corvette
						is_ship_size = science
					}
				}
			}
			set_location = event_target:ngm_phenix
			if = {
				limit = {
					any_owned_ship = {
						is_ship_size = corvette
					}
				}
				set_home_base = event_target:ngm_phenix
			}
		}
		# Remove the old home planet
		event_target:previous_home_planet = {
			every_owned_pop = {
				if = {
					limit = {
						is_robot_pop = no
						is_sapient = yes
					}
					modify_species = {
						ideal_planet_class = pc_city
					}
				}
				unemploy_pop = yes
				resettle_pop = {
					pop = this
					planet = event_target:ngm_phenix
				}
			}
			change_pc = pc_nuked
			destroy_colony = yes
			reroll_planet = yes
		}
		event_target:ngm_phenix = {
			every_owned_pop = {
				unemploy_pop = yes
				clear_pop_category = yes
			}
			check_planet_employment = yes
		}
		# unclaim the old home system
		event_target:previous_home_system = {
			every_fleet_in_system = {
				delete_fleet = this
			}
			remove_star_flag = empire_home_system
			remove_star_flag = empire_cluster
			every_neighbor_system = {
				remove_star_flag = empire_cluster
				every_neighbor_system = {
					remove_star_flag = empire_cluster
				}
			}
		}
		# Set species homeworld
		owner_species = {
			set_species_homeworld = event_target:ngm_phenix
		}
		every_owned_pop_species = {
			set_species_homeworld = event_target:ngm_phenix
		}
		# 首都の移動
		event_target:ngm_phenix = {
			set_capital = yes
			set_sector_capital = yes
			set_owner = root
			set_controller = root
			set_planet_flag = ruined_orbital_ring_planet
			solar_system = {
				spawn_megastructure = {
					type = orbital_ring_ruined
					planet = event_target:ngm_phenix
				}
				spawn_megastructure = {
					type = mega_art_installation_ruined
					planet = event_target:ngm_phenix_0_mega_art_installation
				}
				spawn_megastructure = {
					type = strategic_coordination_center_ruined
					planet = event_target:ngm_phenix_0_strategic_coordination_center_ruined
				}
				spawn_megastructure = {
					type = interstellar_assembly_ruined
					planet = event_target:ngm_phenix_0_interstellar_assembly_ruined
				}
				spawn_megastructure = {
					type = "hyper_relay"
					random_pos = yes
					orbit_angle = 360					# range of the randomization
				}
			}
			# sector = {
			# 	assign_leader = event_target:ngm_phenix_gov
			# }
			while = {
				count = 72
				create_pop = {
					species = owner_main_species
				}
			}
			while = {
				count = 200
				create_pop = {
					species = event_target:ngm_phenix_global_avi_species
				}
			}
			while = {
				count = 80
				create_pop = {
					species = event_target:ngm_phenix_global_machine_species
				}
			}
			create_fallen_empire_starting_navy = yes
			create_fleet = {
				effect = {
					set_owner = root
					create_ship = {
						name = random
						random_existing_design = science
					}
					set_fleet_stance = evasive
					set_location = event_target:ngm_phenix
					owner = {
						create_leader = {
							class = scientist
							sub_type = survey
							name = random
							species = owner_main_species
						}
					}
					set_leader = last_created_leader
				}
			}
		}
		# 第2星系
		event_target:ngm_phenix_2 = {
			set_owner = root
			set_controller = root
			solar_system = {
				spawn_megastructure = {
					type = "hyper_relay"
					random_pos = yes
					orbit_angle = 360					# range of the randomization
				}
			}
			while = {
				count = 50
				create_pop = {
					species = owner_main_species
				}
			}
			while = {
				count = 100
				create_pop = {
					species = event_target:ngm_phenix_global_avi_species
				}
			}
			while = {
				count = 40
				create_pop = {
					species = event_target:ngm_phenix_global_machine_species
				}
			}
		}
		# 第3星系
		event_target:ngm_phenix_3 = {
			set_owner = root
			set_controller = root
			while = {
				count = 50
				create_pop = {
					species = owner_main_species
				}
			}
			while = {
				count = 100
				create_pop = {
					species = event_target:ngm_phenix_global_avi_species
				}
			}
			while = {
				count = 40
				create_pop = {
					species = event_target:ngm_phenix_global_machine_species
				}
			}
			solar_system = {
				# spawn_megastructure = {
				# 	type = orbital_ring_ruined
				# 	planet = event_target:ngm_phenix_3
				# }
				spawn_megastructure = {
					type = "hyper_relay"
					random_pos = yes
					orbit_angle = 360					# range of the randomization
				}
			}
		}
		# 第4星系
		event_target:ngm_phenix_4 = {
			set_owner = root
			set_controller = root
			while = {
				count = 50
				create_pop = {
					species = owner_main_species
				}
			}
			while = {
				count = 100
				create_pop = {
					species = event_target:ngm_phenix_global_avi_species
				}
			}
			while = {
				count = 40
				create_pop = {
					species = event_target:ngm_phenix_global_machine_species
				}
			}
			solar_system = {
				# spawn_megastructure = {
				# 	type = orbital_ring_ruined
				# 	# planet = event_target:ngm_phenix_4
				# 	planet = prev
				# }
				spawn_megastructure = {
					type = mega_shipyard_ruined
					planet = event_target:ngm_phenix_4_mega_shipyard_ruined
				}
				spawn_megastructure = {
					type = "hyper_relay"
					random_pos = yes
					orbit_angle = 360					# range of the randomization
				}
			}
		}
		# 第5星系
		event_target:ngm_phenix_5 = {
			set_owner = root
			set_controller = root
			solar_system = {
				spawn_megastructure = {
					type = "dyson_sphere_5"
					graphical_culture = mammalian_01
				}
				spawn_megastructure = {
					type = "hyper_relay"
					random_pos = yes
					orbit_angle = 360					# range of the randomization
				}
				country_event = {
					# days = 1
					id = ngm_origin.2004
				}
			}
		}
		# 第6星系
		event_target:ngm_phenix_6 = {
			set_owner = root
			set_controller = root
			solar_system = {
				spawn_megastructure = {
					type = "matter_decompressor_4"
					graphical_culture = mammalian_01
				}
				spawn_megastructure = {
					type = "hyper_relay"
					random_pos = yes
					orbit_angle = 360					# range of the randomization
				}
			}
		}
		# 第7星系
		event_target:ngm_phenix_7 = {
			set_owner = root
			set_controller = root
			solar_system = {
				spawn_megastructure = {
					type = "hyper_relay"
					random_pos = yes
					orbit_angle = 360					# range of the randomization
				}
				spawn_megastructure = {
					type = think_tank_ruined
					planet = event_target:ngm_phenix_7_think_tank_ruined
				}
			}
		}
		# 第8星系
		event_target:ngm_phenix_8 = {
			set_owner = root
			set_controller = root
			solar_system = {
				spawn_megastructure = {
					type = "hyper_relay"
					random_pos = yes
					orbit_angle = 360					# range of the randomization
				}
			}
		}
		# 第9星系
		event_target:ngm_phenix_9 = {
			set_owner = root
			set_controller = root
			solar_system = {
				spawn_megastructure = {
					type = "hyper_relay"
					random_pos = yes
					orbit_angle = 360					# range of the randomization
				}
			}
		}
		# 第10星系
		event_target:ngm_phenix_10 = {
			set_owner = root
			set_controller = root
			solar_system = {
				spawn_megastructure = {
					type = "quantum_catapult_3"
					graphical_culture = mammalian_01
				}
				# spawn_megastructure = {
				# 	type = "gateway_ruined"
				# 	random_pos = yes
				# 	orbit_angle = 360					# range of the randomization
				# }
				spawn_megastructure = {
					type = "hyper_relay"
					random_pos = yes
					orbit_angle = 360					# range of the randomization
				}
			}
		}
		# 初期イベント
		add_resource = {
			unity = 720000
		}
		country_event = {
			id = ngm_origin.2001
		}
		country_event = {
			id = ngm_origin.2002
		}
		country_event = {
			id = ngm_origin.2003
		}
		country_event = {
			id = ngm_origin.2004
		}
		country_event = {
			id = ngm_origin.2005
		}
		add_modifier = {
			modifier = origin_ngm_phenix_1_modifier
		}
		add_modifier = {
			modifier = origin_ngm_phenix_2_modifier
		}
		add_modifier = {
			modifier = origin_ngm_phenix_3_modifier
		}
		add_modifier = {
			modifier = origin_ngm_phenix_4_modifier
		}
		add_modifier = {
			modifier = origin_ngm_phenix_5_modifier
		}
		add_modifier = {
			modifier = origin_ngm_phenix_6_modifier
		}
		add_modifier = {
			modifier = origin_ngm_phenix_7_modifier
		}
		add_modifier = {
			modifier = origin_ngm_phenix_8_modifier
		}
		add_modifier = {
			modifier = origin_ngm_phenix_9_modifier
		}
		add_modifier = {
			modifier = origin_ngm_phenix_10_modifier
		}
		add_modifier = {
			modifier = origin_ngm_phenix_11_modifier
		}
		set_country_flag = encountered_first_wormhole
		add_seen_bypass_type = wormhole
	}
}

# 黄昏の帝国	建築物生成イベント
country_event = {
	id = ngm_origin.2001
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_phenix
	}
	immediate = {
		# Buildings
		event_target:ngm_phenix = {
			# 首都
			# 1.帝国宮殿
			add_building = building_ngm_Phe_Palace
			# 2.帝国大審院
			add_building = building_ngm_Phe_Court
			# 3.帝国紋章院
			add_building = building_ngm_Phe_Crest
			# 4.帝国中央学院
			add_building = building_ngm_Phe_Central_school
			# 5.帝国庭園
			add_building = building_ngm_Phe_Park
			# 6.帝立宇宙港
			add_building = building_ngm_Phe_Spaceport
			# 7.帝国軍総司令部
			add_building = building_ngm_Phe_HQ
			# 8.帝国要塞
			add_building = building_ngm_Phe_Fort
			while = {
				count = 4
				add_district = district_arcology_housing
			}
			while = {
				count = 3
				add_district = district_arcology_arms_industry
				add_district = district_arcology_civilian_industry
			}
		}
		event_target:ngm_phenix_2 = {
			# 首都
			# 1.帝国離宮
			add_building = building_ngm_Phe_S_Palace
			# 2.帝国工場
			add_building = building_ngm_Phe_Factory
			# 3.帝国工場
			add_building = building_ngm_Phe_Factory
			# 4.帝国精製所
			add_building = building_ngm_Phe_Purification
			# 5.帝国精製所
			add_building = building_ngm_Phe_Purification
			# 6.帝国庭園
			add_building = building_ngm_Phe_Park
			# 7.帝国軌道エレベータ
			add_building = building_ngm_Phe_orbit_elv
			# 8.帝国大学
			add_building = building_ngm_Phe_University
			# 9.帝国要塞
			add_building = building_ngm_Phe_Fort
			while = {
				count = 7
				add_district = district_city
				add_district = district_industrial
			}
		}
		event_target:ngm_phenix_3 = {
			# 首都
			# 1.帝国離宮
			add_building = building_ngm_Phe_S_Palace
			# 2.帝国工場
			add_building = building_ngm_Phe_Factory
			# 3.帝国工場
			add_building = building_ngm_Phe_Factory
			# 4.帝国精製所
			add_building = building_ngm_Phe_Purification
			# 5.帝国精製所
			add_building = building_ngm_Phe_Purification
			# 6.帝国庭園
			add_building = building_ngm_Phe_Park
			# 7.帝国軌道エレベータ
			add_building = building_ngm_Phe_orbit_elv
			# 8.帝国大学
			add_building = building_ngm_Phe_University
			# 9.帝国要塞
			add_building = building_ngm_Phe_Fort
			while = {
				count = 7
				add_district = district_city
				add_district = district_industrial
			}
		}
		event_target:ngm_phenix_4 = {
			# 首都
			# 1.帝国離宮
			add_building = building_ngm_Phe_S_Palace
			# 2.帝国工場
			add_building = building_ngm_Phe_Factory
			# 3.帝国工場
			add_building = building_ngm_Phe_Factory
			# 4.帝国精製所
			add_building = building_ngm_Phe_Purification
			# 5.帝国精製所
			add_building = building_ngm_Phe_Purification
			# 6.帝国庭園
			add_building = building_ngm_Phe_Park
			# 7.帝国軌道エレベータ
			add_building = building_ngm_Phe_orbit_elv
			# 8.帝国大学
			add_building = building_ngm_Phe_University
			# 9.帝国要塞
			add_building = building_ngm_Phe_Fort
			while = {
				count = 7
				add_district = district_city
				add_district = district_industrial
			}
		}
	}
}

# 黄昏の帝国	前技術取得イベント
country_event = {
	id = ngm_origin.2002
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_phenix
	}
	immediate = {
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_afterburners_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_alloys_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_assembly_pattern
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_corvette_build_speed
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_corvette_hull_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_engineering_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_luxuries_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mass_drivers_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mineral_purification_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mining_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_missiles_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_orbital_trash_dispersal
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_powered_exoskeletons
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_robomodding
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_robomodding_m
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_robotic_workers
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_ship_armor_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_space_mining_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_space_mining_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_strike_craft_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_torpedoes_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_advanced_metallurgy_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_armor_hardeners_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_autocannons_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_corvette_hull_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_crystal_armor_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_defense_platform_hull_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_destroyer_build_speed
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_destroyer_hull_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_destroyers
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_droid_workers
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_engineering_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_exotic_gases
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_housing_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_integrated_cybernetics
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_lost_building_methods
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mass_drivers_3
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_micro_replicators
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mine_betharian
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mine_exotic_gases
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mine_rare_crystals
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mineral_purification_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mining_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_missiles_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_nanite_transmutation
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_ordered_retreat
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_rare_crystals
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_repeatable_lcluster_clue
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_robomodding_points_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_ship_armor_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_space_mining_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_space_mining_4
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_strike_craft_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_supreme_alloy
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_swarmer_missiles_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_temple_of_transportation
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_thrusters_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_afterburners_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_alloys_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_autocannons_2
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_binary_motivators
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_construction_templates
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_cruiser_build_speed
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_cruiser_hull_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_cruisers
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_destroyer_hull_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_flak_batteries_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_housing_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_kinetic_artillery_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_luxuries_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mass_drivers_4
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mining_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_missiles_4
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_self_assembling_components
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_ship_armor_4
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_space_defense_station_improvement
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_space_mining_5
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_strike_craft_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_thrusters_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_torpedoes_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_advanced_metallurgy_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_autocannons_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_battleship_build_speed
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_battleship_hull_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_battleships
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_cruiser_hull_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_crystal_armor_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_engineering_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_flak_batteries_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_kinetic_artillery_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mass_accelerator_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mass_accelerator_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mass_drivers_5
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_mega_assembly
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_missiles_5
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_nanite_assemblers
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_robomodding_points_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_robot_assembly_complex
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_ship_armor_5
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_strike_craft_skrand
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_swarmer_missiles_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_synthetic_leaders
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_synthetic_workers
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_thrusters_4
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_torpedoes_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_armor_hardeners_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_battleship_hull_2
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_btc_1
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_colossus
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mega_engineering
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_nanite_autocannon
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_nanite_flak_batteries
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_nanite_repair_system
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_pk_cracker
		# }
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_pk_nanobots
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_ring_world
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_titan_hull_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_titan_hull_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_titans
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_administrative_ai
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_automated_exploration
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_auxiliary_fire_control
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_combat_computers_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_cryostasis_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_decryption_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_encryption_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_fusion_power
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_lasers_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_physics_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_power_hub_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_power_plant_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_reactor_boosters_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_reactor_boosters_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_shields_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_space_science_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_space_science_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_assisted_detection
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_atmospheric_orbital_mechanics
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_cold_fusion_power
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_consumer_good_refinement_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_decryption_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_detection_array
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_disruptors_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_encryption_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_ftl_inhibitor
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_hyper_drive_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_hyper_relays
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_lasers_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mine_volatile_motes
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mining_drone_weapon_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_new_numbers
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_pd_tracking_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_physics_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_plasma_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_power_hub_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_power_plant_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_self_aware_logic
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_sensors_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_shield_hardeners_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_shield_rechargers_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_shields_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_space_cloud_weapon_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_space_science_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_space_science_4
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_trinary_computing
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_unusual_senses
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_volatile_motes
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_antimatter_power
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_cloaking_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_combat_computers_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_cryostasis_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_disruptors_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_energy_torpedoes_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_global_research_initiative
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_hyper_drive_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_lasers_4
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_lgate_activation
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mine_dark_matter
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_neuro_quantum_links
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_planetary_shield_generator
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_plasma_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_power_plant_4
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_sensors_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_shields_4
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_space_science_5
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_wormhole_stabilization
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_arc_emitter_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_arc_emitter_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_cloaking_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_combat_computers_3
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_combat_computers_autonomous
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_consumer_good_refinement_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_decryption_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_disruptors_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_encryption_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_energy_lance_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_energy_lance_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_energy_torpedoes_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_gateway_activation
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_lasers_5
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_pd_tracking_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_physics_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_plasma_3
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_positronic_implants
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_sapient_ai
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_sensors_4
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_shields_5
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_synchronized_defences
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_zero_point_power
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_dark_matter_detection
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_dyson_sphere
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_extradimensional_weapon_1
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_gateway_construction
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_jump_drive_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_matter_decompressor
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_pk_neutron
		# }
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_pk_shielder
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_quantum_catapult
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_science_nexus
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_sentry_array
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_shield_hardeners_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_adaptive_bureaucracy
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_alien_life_studies
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_deep_sinkhole
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_dense_jungle
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_eco_simulation
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_food_processing_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_frontier_health
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_genome_mapping
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_ground_defense_planning
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_hydroponics
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_massive_glacier
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_neural_implants
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_noxious_swamp
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_planetary_unification
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_quicksand_basin
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_society_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_space_trading
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_space_whale_weapon_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_toxic_kelp
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_xeno_linguistics
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_adaptive_combat_algorithms
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_alien_topography
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_artificial_moral_codes
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_autonomous_agents
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_capital_productivity_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_centralized_command
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_cloning
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_colonial_bureaucracy
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_colonial_centralization
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_colonization_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_colonization_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_compact_living
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_dangerous_wildlife
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_doctrine_fleet_size_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_doctrine_fleet_size_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_doctrine_navy_size_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_effective_bureaucracy
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_epigenetic_triggers
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_frontier_hospital
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_gene_banks
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_gene_crops
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_global_defense_grid
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_interstellar_fleet_traditions
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_living_state
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mountain_range
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_planetary_infrastructure_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_predatory_tactics
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_satisfying_insults
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_slave_colonies
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_society_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_subdermal_stimulation
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_terrestrial_sculpting
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_unity_of_purpose
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_vitality_boosters
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_volcano
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_xeno_aesthetics
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_xeno_diplomacy
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_capital_productivity_2
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_collective_production_methods
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_collective_self
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_colonization_4
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_combat_training
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_command_matrix
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_doctrine_fleet_size_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_doctrine_navy_size_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_ecological_adaptation
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_embodied_dynamism
		# }
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_executive_retreat
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_food_processing_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_galactic_administration
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_galactic_bureaucracy
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_gene_tailoring
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_glandular_acclimation
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_global_production_strategy
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_housing_agrarian_idyll
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_interstellar_economics
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mine_zro
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_nano_vitality_crops
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_penal_colonies
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_psionic_barrier
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_psionic_theory
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_refit_standards
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_regenerative_hull_tissue
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_resort_colonies
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_resource_processing_algorithms
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_synthetic_thought_patterns
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_telepathy
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_tomb_world_adaption
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_xeno_relations
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_xeno_tourism_agency
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_capital_productivity_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_climate_restoration
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_colonization_5
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_doctrine_fleet_size_4
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_doctrine_fleet_size_5
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_doctrine_navy_size_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_doctrine_navy_size_4
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_galactic_markets
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_neuroregeneration
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_nutrient_replication
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_planetary_infrastructure_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_precognition_interface
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_society_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_thought_enforcement
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_tracking_implants
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_archaeo_pk_devolving_beam
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_ascension_theory
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_cloaking_psi
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_interstellar_assembly
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_leviathan_transgenesis
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_lithoid_transgenesis
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mega_art
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_mega_shipyard
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_pk_godray
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_plantoid_transgenesis
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_psi_jump_drive_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_psionic_shield
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_scourge_missile_1
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_strategic_coordination
		}
		# give_tech_no_error_effect = {
		# 	MESSAGE = no
		# 	TECH = tech_swarm_strike_craft_1
		# }
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_galactic_ambitions
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_manifest_destiny
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_repeatable_improved_starbase_capacity
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_starbase_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_starbase_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_starbase_4
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_starbase_5
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_basic_science_lab_2
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_basic_science_lab_3
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_experimental_subspace_navigation
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_heritage_site
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_cloaking_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_autocurating_vault
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH = tech_habitat_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_orbital_ring_tier_1
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_juggernaut
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_paradise_dome
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_interstellar_campaigns
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_galactic_campaigns
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_gene_expressions
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_selected_lineages
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_capacity_boosters
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_modular_engineering
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_archaeostudies
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_archaeo_point_defence
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_archaeo_lasers
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_archaeo_mass_drivers
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_archaeo_refinery
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_archaeo_overcharger
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_archaeo_titan_beam
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_archaeo_rampart
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_archaeo_detection_scrambler
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_archaeoarmor
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_archaeoshield
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_archaeo_strike_crafts
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_archaeo_mass_accelerator
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_archaeo_missiles
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_ceremony_theory
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_ceremony_theory_second
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_ad_high_degree_of_local_autonomy
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_hypercomms_forum
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_hyper_entertainment_forum
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_arcane_deciphering
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_arcane_deciphering
		}
		give_tech_no_error_effect = {
			MESSAGE = no
			TECH =  tech_morphogenetic_field_mastery
		}
	}
}

# 黄昏の帝国	守備隊イベント
country_event = {
	id = ngm_origin.2003
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_phenix
	}
	immediate = {
		event_target:ngm_phenix = {
			while = {
				count = 20
				create_army = {
					name = random
					owner = root
					species = root
					type = "ngm_imperial_guard"
				}
			}
		}
		every_owned_planet = {
			limit = {
				has_building = building_ngm_Phe_Fort
			}
			while = {
				count = 10
				create_army = {
					name = random
					owner = root
					species = root
					type = "ngm_imperiallocal_army"
				}
			}
		}
	}
}

# 黄昏の帝国	巨大構造物置き換えイベント
country_event = {
	id = ngm_origin.2004
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_phenix
	}
	immediate = {
		if = {
			limit = {
				has_global_flag = giga_menu_initial_settings_done
			}
			every_owned_megastructure = {
				limit = {
					is_megastructure_type = "dyson_sphere_5"
				}
				remove_megastructure = this
			}
			event_target:ngm_phenix_5 = {
				solar_system = {
					spawn_megastructure = {
						type = "dyson_sphere_5_b_star"
						owner = root
					}
				}
			}
		}
	}
}

# 黄昏の帝国	属国生成イベント
country_event = {
	id = ngm_origin.2005
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_phenix
	}
	immediate = {
		set_spawn_system_batch = begin
		no_scope = {
			spawn_system = {
				min_distance >= 200
				max_distance <= 400
				min_orientation_angle = 0
				max_orientation_angle = 360
				initializer = "ngm_phenix_npc_init"
				hyperlane = no
				effect = {
					save_global_event_target_as = ngm_phenix_npc
				}
			}
		}
		event_target:ngm_phenix_npc = {
			set_owner = this
			set_controller = this
			while = {
				count = 2
				random_system = {
					limit = {
						distance = {
							type = euclidean
							source = prev
							min_distance >= 0
							max_distance <= 40
						}
					}
					add_hyperlane = {
						from = this
						to = event_target:ngm_phenix_npc_init_system
					}
				}
			}
		}
		set_spawn_system_batch = end
		# Add a wormhole
		event_target:ngm_phenix_npc_init_system = {
			event_target:ngm_phenix_10_init_system = {
				# done this way to ensure we don't spawn "orphan" wormholes (wormholes that aren't linked to anything)
				spawn_natural_wormhole = {
					bypass_type = wormhole
					random_pos = yes
					orbit_angle = 360
				}
			}
			spawn_natural_wormhole = {
				bypass_type = wormhole
				random_pos = yes
				orbit_angle = 360
			}
			link_wormholes = event_target:ngm_phenix_10_init_system
		}
		add_trust = {
			who = event_target:ngm_phenix_npc_country
			amount = 12000
		}
		add_intel = {
			who = event_target:ngm_phenix_npc_country
			amount = 100
		}
		event_target:ngm_phenix = {
			set_capital = yes
			set_sector_capital = yes
		}
	}
}
